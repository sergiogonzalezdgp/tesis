main = "K=1"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl2 <- fviz_cluster(cl_2, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=2"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl3 <- fviz_cluster(cl_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl4 <- fviz_cluster(cl_4, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=4"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
library(gridExtra)
grid.arrange(p_cl1, p_cl2, p_cl3, p_cl4, nrow = 2)
#ALMACENAR K=1:K=4
p_cl1 <- fviz_cluster(cl_1, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=1"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p_cl1, p_cl2, p_cl3, p_cl4, nrow = 2)
p_cl2 <- fviz_cluster(cl_2, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=2"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl3 <- fviz_cluster(cl_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl4 <- fviz_cluster(cl_4, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=4"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p_cl1, p_cl2, p_cl3, p_cl4, nrow = 2)
last_error
rlang::last_error()
p_cl3
p_cl4 <- fviz_cluster(cl_4, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800", "#ff5e78"),
ggtheme = theme_minimal(),
main = "K=4"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
library(gridExtra)
grid.arrange(p_cl1, p_cl2, p_cl3, p_cl4, nrow = 2)
p_cl2
cl2_2
cl2
cl_2
cl_2$cluster
cl_2$size
balloonplot(t(UCE), main ="Contexto del evento", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
balloonplot(t(UC), main ="Contexto del evento", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
#CLUSTER UCE Girado
UCE_girado = as.data.frame.matrix(scale(UCE)) #Escalar
UCE_girado <- t(UCE_escalado)
balloonplot(t(UCE_girado), main ="Contexto del evento", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
balloonplot(t(UCE_girado), main ="Contexto del evento", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
UCE_girado <- t(UCE_girado)
balloonplot(t(UCE_girado), main ="Contexto del evento", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
#CLUSTER UCE Girado
UCE_escalado = as.data.frame.matrix(scale(UCE)) #Escalar
balloonplot(t(UCE_escalado), main ="Contexto del evento", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
balloonplot(t(UCE_escalado), main ="Contexto del evento", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
#CLUSTER UCE Girado
UCE_escalado = as.data.frame.matrix(scale(UCE)) #Escalar
balloonplot(t(UCE_escalado), main ="Contexto del evento", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
balloonplot(t(UCE_escalado), main ="Contexto", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
library(gplots)
balloonplot(t(UCE_escalado), main ="Contexto", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
balloonplot(t(UC), main ="Contexto del evento", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
balloonplot(t(UC), main ="Contexto del evento", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
balloonplot(t(UCE_escalado), main ="Contexto del evento", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
UCE_girado <- t(UCE)
balloonplot(t(UCE_girado), main ="Contexto", xlab ="", ylab="",
label = FALSE, show.margins = FALSE)
UCE_escalado = as.data.frame.matrix(scale(UCE_girado)) #Escalar
#Elbow
set.seed(123)
fviz_nbclust(UCE_escalado, kmeans, method = "wss")
#Sillhoutte
set.seed(123)
fviz_nbclust(UCE_escalado, kmeans, method = "silhouette")
#GAP STAT
set.seed(123)
fviz_nbclust(UCE_escalado, kmeans, method = "gap_stat")
#EXTRACCION
cl_UCE_2 <- kmeans(UCE_escalado,2,nstart = 50, iter.max = 15)
cl_UCE_3 <- kmeans(UCE_escalado,3,nstart = 50, iter.max = 15)
cl_UCE_2
cl_UCE_3
p_UCE_cl2 <- fviz_cluster(cl_UCE_2, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=2"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_UCE_cl3 <- fviz_cluster(cl_UCE_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
grid.arrange(p_UCE_cl2, p_UCE_cl3, margin())
grid.arrange(p_UCE_cl2, pUCE__cl3, nrow = 2, margin())
grid.arrange(p_UCE_cl2, p_UCE_cl3, nrow = 2, margin())
grid.arrange(p_UCE_cl2, p_UCE_cl3, nrow = 1, margin())
p_UCE_cl2
p_UCE_cl3
figura6 <- heatmap(UCE, Rowv = NA, Colv = NA, col = yellow(100))
figura5 <- heatmap(UC, Rowv = NA, Colv = NA, col = yellow(100))
p_cl2
cl2
cl_2
cl_2$tot.withinss
cl_2$withinss
cl_3
cl_1
cl_4
fviz_nbclust(UCE_escalado, kmeans, method = "wss")
fviz_nbclust(UCE_escalado, kmeans, method = "silhouette")
fviz_nbclust(UCE_escalado, kmeans, method = "gap_stat")
#EXTRACCION
cl_UCE_2 <- kmeans(UCE_escalado,2,nstart = 50, iter.max = 15)
p_UCE_cl2 <- fviz_cluster(cl_UCE_2, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=2"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
pl_UCE_2
p_UCE_cl2
cl_UCE_2
p_UCE_cl3 <- fviz_cluster(cl_UCE_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_UCE_cl3
cl_UCE_3
balloonplot(t(UCE), main ="Contexto", xlab ="", ylab="", label = FALSE, show.margins = FALSE) #Frecuencias
figura6 <- heatmap(UCE, Rowv = NA, Colv = NA, col = yellow(100))
UCE_girado <- t(UCE)
balloonplot(t(UCE_girado), main ="Contexto", xlab ="", ylab="", label = FALSE, show.margins = FALSE) #Frecuencias
balloonplot(t(UCE_girado), main ="Contexto", xlab ="", ylab="", label = FALSE, show.margins = FALSE)
p_UCE_cl3
cl_UCE_3
cl_4
#Grado de similitud entre variables cualitativas
fviz_ca_biplot(UCE_escalado, repel = TRUE)
UC_gir <- t(UC)
#UC_gir <- t(UC_gir) #girar
#UC_gir <- UC_gir[, -11] #eliminar col11 = OUTLIER(Usuario)
#UC_gir <- t(UC_gir) #volver a girar
balloonplot(t(UC_gir), main ="Usuarios y Contexto", xlab ="", ylab="",
label = FALSE, show.margins = FALSE,text.size=0.5)
UC_ca <- CA(UC_gir, graph = FALSE) #Análisis correspondencia
eigen <- get_eigenvalue(UC_ca) #almacena eigenvalues
fviz_screeplot(UC_ca, addlabels = TRUE, ylim = c(0, 50)) #
fviz_screeplot(UC_ca) + geom_hline(yintercept=12.5, linetype=2, color="red")  #1/(ncol(UC_ca)-1) = 1/8 = 12.5%
#Grado de similitud entre variables cualitativas
fviz_ca_biplot(UC_ca, repel = TRUE)
#Graficación de las variables
filas <- get_ca_row(UC_ca) #Filas
filas
head(filas$coord)
fviz_ca_row(UC_ca, repel = TRUE)
head(filas$cos2, 12) #Grado de asociación entre filas y columnas en el eje
#####---If a row item is well represented by two dimensions, the sum of the cos2 is closed to one.
#Calidad de la representación de las filas
fviz_ca_row(UC_ca, col.row = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
#UC_gir <- t(UC_gir) #girar
#UC_gir <- UC_gir[, -11] #eliminar col11 = OUTLIER(Usuario)
#UC_gir <- t(UC_gir) #volver a girar
balloonplot(t(UC), main ="Usuarios y Contexto", xlab ="", ylab="",
label = FALSE, show.margins = FALSE,text.size=0.5)
UC_ca <- CA(UC_gir, graph = FALSE) #Análisis correspondencia
eigen <- get_eigenvalue(UC_ca) #almacena eigenvalues
fviz_screeplot(UC_ca, addlabels = TRUE, ylim = c(0, 50)) #
fviz_screeplot(UC_ca) + geom_hline(yintercept=12.5, linetype=2, color="red")  #1/(ncol(UC_ca)-1) = 1/8 = 12.5%
#Grado de similitud entre variables cualitativas
fviz_ca_biplot(UC_ca, repel = TRUE)
#Graficación de las variables
filas <- get_ca_row(UC_ca) #Filas
filas
head(filas$coord)
fviz_ca_row(UC_ca, repel = TRUE)
head(filas$cos2, 12) #Grado de asociación entre filas y columnas en el eje
#####---If a row item is well represented by two dimensions, the sum of the cos2 is closed to one.
#Calidad de la representación de las filas
fviz_ca_row(UC_ca, col.row = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
UC_gir <- t(UC)
UC_ca <- CA(UC_gir, graph = FALSE) #Análisis correspondencia
eigen <- get_eigenvalue(UC_ca) #almacena eigenvalues
fviz_screeplot(UC_ca, addlabels = TRUE, ylim = c(0, 50)) #
fviz_screeplot(UC_ca) + geom_hline(yintercept=12.5, linetype=2, color="red")  #1/(ncol(UC_ca)-1) = 1/8 = 12.5%
#Grado de similitud entre variables cualitativas
fviz_ca_biplot(UC_ca, repel = TRUE)
#Graficación de las variables
filas <- get_ca_row(UC_ca) #Filas
filas
head(filas$coord)
fviz_ca_row(UC_ca, repel = TRUE)
head(filas$cos2, 12) #Grado de asociación entre filas y columnas en el eje
UC_gir <- t(UCE)
#UC_gir <- t(UC_gir) #girar
#UC_gir <- UC_gir[, -11] #eliminar col11 = OUTLIER(Usuario)
#UC_gir <- t(UC_gir) #volver a girar
balloonplot(t(UC), main ="Usuarios y Contexto", xlab ="", ylab="",
label = FALSE, show.margins = FALSE,text.size=0.5)
UC_ca <- CA(UC_gir, graph = FALSE) #Análisis correspondencia
eigen <- get_eigenvalue(UC_ca) #almacena eigenvalues
fviz_screeplot(UC_ca, addlabels = TRUE, ylim = c(0, 50)) #
fviz_screeplot(UC_ca) + geom_hline(yintercept=12.5, linetype=2, color="red")  #1/(ncol(UC_ca)-1) = 1/8 = 12.5%
#Grado de similitud entre variables cualitativas
fviz_ca_biplot(UC_ca, repel = TRUE)
#Graficación de las variables
filas <- get_ca_row(UC_ca) #Filas
filas
head(filas$coord)
fviz_ca_row(UC_ca, repel = TRUE)
head(filas$cos2, 12) #Grado de asociación entre filas y columnas en el eje
#####---If a row item is well represented by two dimensions, the sum of the cos2 is closed to one.
#Calidad de la representación de las filas
fviz_ca_row(UC_ca, col.row = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
#####---If a row item is well represented by two dimensions, the sum of the cos2 is closed to one.
#Calidad de la representación de las filas
fviz_ca_row(UC_ca, col.row = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
fviz_cos2(UC_ca, choice = "row", axes = 1:2)
fviz_contrib(UC_ca, choice = "row", axes = 1, top = 9)
fviz_contrib(UC_ca, choice = "row", axes = 2, top = 9)
fviz_contrib(UC_ca, choice = "row", axes = 1:2, top = 9)
fviz_ca_row(UC_ca, col.row = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
#Grado de similitud entre variables cualitativas
fviz_ca_biplot(UC_ca, repel = TRUE)
#UC_gir <- t(UC_gir) #girar
#UC_gir <- UC_gir[, -11] #eliminar col11 = OUTLIER(Usuario)
#UC_gir <- t(UC_gir) #volver a girar
balloonplot(t(UC), main ="Usuarios y Contexto", xlab ="", ylab="",
label = FALSE, show.margins = FALSE,text.size=0.5)
#UC_gir <- t(UC_gir) #girar
#UC_gir <- UC_gir[, -11] #eliminar col11 = OUTLIER(Usuario)
#UC_gir <- t(UC_gir) #volver a girar
balloonplot(t(UCE), main ="Usuarios y Contexto", xlab ="", ylab="",
label = FALSE, show.margins = FALSE,text.size=0.5)
#####---If a row item is well represented by two dimensions, the sum of the cos2 is closed to one.
#Calidad de la representación de las filas
fviz_ca_row(UC_ca, col.row = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
#COLUMNAS
col <- get_ca_col(UC_ca)
col
fviz_ca_col(UC_ca)
fviz_ca_col(UC_ca, col.col = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
fviz_cos2(UC_ca, choice = "col", axes = 1:3)
fviz_contrib(UC_ca, choice = "col", axes = 1:3)
fviz_ca_biplot(UC_ca, repel = TRUE)
#UC_gir <- t(UC_gir) #girar
#UC_gir <- UC_gir[, -11] #eliminar col11 = OUTLIER(Usuario)
#UC_gir <- t(UC_gir) #volver a girar
balloonplot(t(UCE), main ="Usuarios y Contexto", xlab ="", ylab="",
label = FALSE, show.margins = FALSE,text.size=0.5)
UC_ca <- CA(UCE, graph = FALSE) #Análisis correspondencia
eigen <- get_eigenvalue(UC_ca) #almacena eigenvalues
fviz_screeplot(UC_ca, addlabels = TRUE, ylim = c(0, 50)) #
fviz_screeplot(UC_ca) + geom_hline(yintercept=12.5, linetype=2, color="red")  #1/(ncol(UC_ca)-1) = 1/8 = 12.5%
#Grado de similitud entre variables cualitativas
fviz_ca_biplot(UC_ca, repel = TRUE)
#Graficación de las variables
filas <- get_ca_row(UC_ca) #Filas
filas
head(filas$coord)
fviz_ca_row(UC_ca, repel = TRUE)
head(filas$cos2, 12) #Grado de asociación entre filas y columnas en el eje
#####---If a row item is well represented by two dimensions, the sum of the cos2 is closed to one.
#Calidad de la representación de las filas
fviz_ca_row(UC_ca, col.row = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE)
fviz_cos2(UC_ca, choice = "row", axes = 1:2)
fviz_contrib(UC_ca, choice = "row", axes = 1, top = 9)
fviz_contrib(UC_ca, choice = "row", axes = 2, top = 9)
cl_2
cl_3
p_UCE_cl3 <- fviz_cluster(cl_UCE_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_UCE_cl3
p_cl3
#PCA
comp_3<- PCA(UCE, scale.unit = TRUE, ncp = 3, graph = TRUE)
#PCA
comp_p <- as.data.frame(UCE)
comp_3<- PCA(comp_p, scale.unit = TRUE, ncp = 3, graph = TRUE)
comp_p
class(comp_p)
View(comp_p)
p_cl3 <- fviz_cluster(cl_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl3 <- fviz_cluster(cl_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl3 <- fviz_cluster(cl_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl3 <- fviz_cluster(cl_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
#Cluster y contexto del evento
UCE_escalado = as.data.frame.matrix(scale(UCE)) #Escalar
UCE_escalado
cl_3 <- kmeans(UCE_escalado,3,nstart = 50, iter.max = 15)
p_cl3 <- fviz_cluster(cl_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_UCE_cl3 <- fviz_cluster(cl_UCE_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
UCE_girado <- t(UCE)
balloonplot(t(UCE_girado), main ="Contexto", xlab ="", ylab="", label = FALSE, show.margins = FALSE) #Frecuencias
UCE_escalado = as.data.frame.matrix(scale(UCE_girado)) #Escalar
cl_UCE_3 <- kmeans(UCE_escalado,3,nstart = 50, iter.max = 15)
p_UCE_cl3 <- fviz_cluster(cl_UCE_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_UCE_cl3
#Cluster y contexto del evento
UCE_escalado = as.data.frame.matrix(scale(UCE)) #Escalar
UCE_escalado
cl_3 <- kmeans(UCE_escalado,3,nstart = 50, iter.max = 15)
p_cl3 <- fviz_cluster(cl_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
#Cluster y contexto del evento
UCE_escalado = as.data.frame.matrix(scale(UCE)) #Escalar
UCE_escalado
#Elbow
set.seed(123)
fviz_nbclust(UCE_escalado, kmeans, method = "wss")
cl_3 <- kmeans(UCE_escalado,3,nstart = 50, iter.max = 15)
grid.arrange(p_cl1, p_cl2, p_cl3, p_cl4, nrow = 2, margin())
# Extracción de Cluster
cl_1 <- kmeans(UCE_escalado,1,nstart = 50, iter.max = 15)
cl_2 <- kmeans(UCE_escalado,2,nstart = 50, iter.max = 15)
cl_3 <- kmeans(UCE_escalado,3,nstart = 50, iter.max = 15)
cl_4 <- kmeans(UCE_escalado,4,nstart = 50, iter.max = 15)
#ALMACENAR K=1:K=4
p_cl1 <- fviz_cluster(cl_1, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=1"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl2 <- fviz_cluster(cl_2, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=2"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl3 <- fviz_cluster(cl_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl4 <- fviz_cluster(cl_4, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800", "#ff5e78"),
ggtheme = theme_minimal(),
main = "K=4"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
library(gridExtra)
grid.arrange(p_cl1, p_cl2, p_cl3, p_cl4, nrow = 2, margin())
UCE_girado <- t(UCE)
balloonplot(t(UCE_girado), main ="Contexto", xlab ="", ylab="", label = FALSE, show.margins = FALSE) #Frecuencias
UCE_girado = as.data.frame.matrix(scale(UCE_girado)) #Escalar
#Elbow
set.seed(123)
fviz_nbclust(UCE_girado, kmeans, method = "wss")
#Sillhoutte
set.seed(123)
fviz_nbclust(UCE_girado, kmeans, method = "silhouette")
#GAP STAT
set.seed(123)
fviz_nbclust(UCE_girado, kmeans, method = "gap_stat")
#EXTRACCION
cl_UCE_2 <- kmeans(UCE_girado,2,nstart = 50, iter.max = 15)
cl_UCE_3 <- kmeans(UCE_girado,3,nstart = 50, iter.max = 15)
p_UCE_cl2 <- fviz_cluster(cl_UCE_2, data = UCE_girado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=2"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_UCE_cl3 <- fviz_cluster(cl_UCE_3, data = UCE_girado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
cl_UCE_2
p_UCE_cl2
p_UCE_cl3
#CLUSTER ANALISIS
UC_escalado = as.data.frame.matrix(scale(UC)) #Escalar
UC_escalado
set.seed(123)
cl_2 <- kmeans(UC_escalado,2,nstart = 50, iter.max = 15)
cl_3 <- kmeans(UC_escalado,3,nstart = 50, iter.max = 15)
cl_4 <- kmeans(UC_escalado,4,nstart = 50, iter.max = 15)
cl_5 <- kmeans(UC_escalado,5,nstart = 50, iter.max = 15)
library(factoextra)
fviz_nbclust(UC_escalado, kmeans, method = "wss")
fviz_cluster(cl_4, data = UC_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "Partitioning Clustering Plot"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
fviz_cluster(cl_4, data = UC_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "Partitioning Clustering Plot"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
#Cluster y contexto del evento
UCE_escalado <- UCE
UCE_escalado = as.data.frame.matrix(scale(UCE)) #Escalar
UCE_escalado
# Extracción de Cluster
cl_1 <- kmeans(UCE_escalado,1,nstart = 50, iter.max = 15)
cl_2 <- kmeans(UCE_escalado,2,nstart = 50, iter.max = 15)
cl_3 <- kmeans(UCE_escalado,3,nstart = 50, iter.max = 15)
cl_4 <- kmeans(UCE_escalado,4,nstart = 50, iter.max = 15)
#ALMACENAR K=1:K=4
p_cl1 <- fviz_cluster(cl_1, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=1"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl2 <- fviz_cluster(cl_2, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=2"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl3 <- fviz_cluster(cl_3, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800"),
ggtheme = theme_minimal(),
main = "K=3"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
p_cl4 <- fviz_cluster(cl_4, data = UCE_escalado,
palette = c("#00AFBB","#2E9FDF", "#E7B800", "#ff5e78"),
ggtheme = theme_minimal(),
main = "K=4"
) + theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) + theme(plot.title = element_text(hjust = 0.5))
library(gridExtra)
grid.arrange(p_cl1, p_cl2, p_cl3, p_cl4, nrow = 2, margin())
p_cl3
cl_3
cl_3
balloonplot(t(UCE_escalado), main ="Contexto", xlab ="", ylab="", label = FALSE, show.margins = FALSE)
balloonplot(t(UCE), main ="Contexto", xlab ="", ylab="", label = FALSE, show.margins = FALSE)
View(UCE)
UCE
UCE
cl_3
UC
UCE
UCE
head(log)
summary(UC)
